@model Web.Models.Product

@{
    ViewBag.Title = "Додати товар";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Додати товар</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>Товар</h4>*@
        <hr/>
        @Html.HiddenFor(model => model.Id)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Art, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Art, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Art, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control doubleValue" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WCategoryId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.WCategoryId, new SelectList(ViewBag.WCategory, "Id", "Name"),
                    new {@class = "form-control", @readonly= "readonly" })
                @*@Html.EditorFor(model => model.WCategory, new {htmlAttributes = new {@class = "form-control"}})*@
                @*@Html.ValidationMessageFor(model => model.WCategoryId, "", new {@class = "text-danger"})*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control doubleValue" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <input type="submit" value="Додати" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад", "Index")
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        function changeweight() {
            var w = $('#Weight')[0].value.replace(',', '.');
            var wcat = w < 10 ? 1 : w < 100 ? 2 : 3;
            $('#WCategoryId').val(wcat);
        }
        $('#Weight').change(changeweight);
        $('.doubleValue').change(function() {
            this.value = this.value.replace('.', ',');
        });
    </script>
}
